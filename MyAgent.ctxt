#BlueJ class context
comment0.params=game\ iAmRed
comment0.target=MyAgent(Connect4Game,\ boolean)
comment0.text=\r\n\ Constructs\ a\ new\ agent,\ giving\ it\ the\ game\ and\ telling\ it\ whether\ it\ is\ Red\ or\ Yellow.\r\n\ \r\n\ @param\ game\ The\ game\ the\ agent\ will\ be\ playing.\r\n\ @param\ iAmRed\ True\ if\ the\ agent\ is\ Red,\ False\ if\ the\ agent\ is\ Yellow.\r\n
comment1.params=
comment1.target=void\ move()
comment1.text=\r\n\ The\ move\ method\ is\ run\ every\ time\ it\ is\ this\ agent's\ turn\ in\ the\ game.\ You\ may\ assume\ that\r\n\ when\ move()\ is\ called,\ the\ game\ has\ at\ least\ one\ open\ slot\ for\ a\ token,\ and\ the\ game\ has\ not\r\n\ already\ been\ won.\r\n\ \r\n\ By\ the\ end\ of\ the\ move\ method,\ the\ agent\ should\ have\ placed\ one\ token\ into\ the\ game\ at\ some\r\n\ point.\r\n\ \r\n\ After\ the\ move()\ method\ is\ called,\ the\ game\ engine\ will\ check\ to\ make\ sure\ the\ move\ was\r\n\ valid.\ A\ move\ might\ be\ invalid\ if\:\r\n\ -\ No\ token\ was\ place\ into\ the\ game.\r\n\ -\ More\ than\ one\ token\ was\ placed\ into\ the\ game.\r\n\ -\ A\ previous\ token\ was\ removed\ from\ the\ game.\r\n\ -\ The\ color\ of\ a\ previous\ token\ was\ changed.\r\n\ -\ There\ are\ empty\ spaces\ below\ where\ the\ token\ was\ placed.\r\n\ \r\n\ If\ an\ invalid\ move\ is\ made,\ the\ game\ engine\ will\ announce\ it\ and\ the\ game\ will\ be\ ended.\r\n\ \r\n
comment2.params=columnNumber
comment2.target=void\ moveOnColumn(int)
comment2.text=\r\n\ Drops\ a\ token\ into\ a\ particular\ column\ so\ that\ it\ will\ fall\ to\ the\ bottom\ of\ the\ column.\r\n\ If\ the\ column\ is\ already\ full,\ nothing\ will\ change.\r\n\ \r\n\ @param\ columnNumber\ The\ column\ into\ which\ to\ drop\ the\ token.\r\n
comment3.params=column
comment3.target=int\ getLowestEmptyIndex(Connect4Column)
comment3.text=\r\n\ Returns\ the\ index\ of\ the\ top\ empty\ slot\ in\ a\ particular\ column.\r\n\ \r\n\ @param\ column\ The\ column\ to\ check.\r\n\ @return\ the\ index\ of\ the\ top\ empty\ slot\ in\ a\ particular\ column;\ -1\ if\ the\ column\ is\ already\ full.\r\n
comment4.params=
comment4.target=int\ randomMove()
comment4.text=\r\n\ Returns\ a\ random\ valid\ move.\ If\ your\ agent\ doesn't\ know\ what\ to\ do,\ making\ a\ random\ move\r\n\ can\ allow\ the\ game\ to\ go\ on\ anyway.\r\n\ \r\n\ @return\ a\ random\ valid\ move.\r\n
comment5.params=checkColour\ slot1\ slot2\ slot3
comment5.target=boolean\ allThreeMatch(boolean,\ Connect4Slot,\ Connect4Slot,\ Connect4Slot)
comment5.text=\r\n\ compare\ adjacent\ slots\ based\ on\ direction\ and\ number\ of\ slots\ to\ check\r\n\ \r\n\ @param\ checkColour\ boolean\ is\ the\ colour?\r\n\ @param\ slot1\ Connect4Slot\ -\ 1st\ slot\ to\ compare\ for\ match\r\n\ @param\ slot2\ Connect4Slot\ -\ 2nd\ slot\ to\ compare\ for\ match\r\n\ @param\ slot3\ Connect4Slot\ -\ 3rd\ slot\ to\ compare\ for\ match\r\n\ @return\ true\ if\ all\ match\ checkColour\ otherwise\ will\ return\ false\r\n
comment6.params=checkColour\ startColumn\ startRow\ direction
comment6.target=boolean\ checkForWin(boolean,\ int,\ int,\ java.lang.String)
comment6.text=\r\n\ check\ posilbilites\ from\ selected\ slot\ to\ determine\ if\ there\ is\ a\ winning\ combination\r\n\ \r\n\ @param\ checkColour\ boolean\ used\ to\ pass\ to\ allThreeMatch\ routine\ at\ end\ for\ comparision\r\n\ @param\ startCol\ int\ column\ of\ selected\ slot\r\n\ @param\ startRow\ int\ row\ of\ selected\ slot\r\n\ @param\ direction\ String\ which\ direction\ to\ check\ for\ winning\ combination\r\n\ @return\ true\ if\ winning\ combination\ is\ found\ otherwise\ will\ return\ false\r\n
comment7.params=playerRed
comment7.target=int\ getNextMove(boolean)
comment7.text=\r\n\ Check\ for\ the\ best\ move\ available\r\n\ Finds\ next\ available\ slot\ in\ each\ row\r\n\ Scans\ adjacent\ slots\ for\ matching\ colours\ and\ returns\ column\ ID\ if\ finds\ winning\ solution\r\n\ \r\n\ @param\ playerRed\ boolean\ is\ the\ matching\ colour\ red?\r\n\ @return\ column\ id\ for\ next\ move,\ -1\ if\ none\ found\r\n
comment8.params=
comment8.target=java.lang.String\ getName()
comment8.text=\r\n\ Returns\ the\ name\ of\ this\ agent.\r\n\r\n\ @return\ the\ agent's\ name\r\n
numComments=9
